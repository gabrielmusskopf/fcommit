#!/usr/bin/bash

command_name="fcommit"
cmd_entered=$1
message=$2

command_abrv=$(echo $cmd_entered | sed 's/-//g')
command=""

actions=("-ft" "-fx" "-tt" "-ch" "-st")

function help_message(){
    echo "uso: $command_name [-h | --help] [-ft | -fx | -ch | -tt | -st] \"[<mensagem do commit>]\"\n"
    echo "Opções: \nft:\t[feat]\tNova funcionalidade\nfx:\t[fix]\tCorreção de funcionalidade existente\ntt:\t[test]\tAdição/correção de cenários de teste\nch:\t[chore]\tAlteração de dependências\nst:\t[style]\tAlteração somente na formatação"
}

case $command_abrv in 
    h|help)
        help_message
        return
        ;;
    ft)
        command="feat"
        ;;
    fx)
        command="fix"
        ;;
    ch)
        command="chore"
        ;;
    tt)
        command="test"
        ;;
    st)
        command="style"
        ;;
    *)
        echo "opção $cmd_entered desconhecida"
        help_message
        return
        ;;
esac

if [ "$2" = "" ]
then
    echo "Deve ser informada a mensagem do commit"
    return
fi

if ! [ -d .git ]; then
    echo "Deve estar em um repositório git"
    return
fi;

branch=$(git branch --show-current)
branch_num=$(git branch --show-current | sed 's/[^0-9]//g' | awk '$0 ~ /[0-9]/{ print "("$0")" }')

commit_msg="$command$branch_num: $message"

git commit -m "$commit_msg"
